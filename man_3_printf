.TH _PRINTF 3 "August 2025" "1.0" "Holberton printf function"
.SH NAME
_printf \- print formatted output to stdout
.SH SYNOPSIS
.B #include "main.h"
.br
.B int _printf(const char *format, ...);
.SH DESCRIPTION
The
.B _printf
function produces output according to a format string.

The
.B format
string is composed of zero or more directives. Each directive is either:
.IP
A plain character, which is written to stdout as-is.
.IP
A conversion specification, introduced by the '%' character, that formats the next argument.

The function returns the number of characters printed (excluding the terminating null byte used internally).
.SH SPECIFIERS
The following conversion specifiers are supported:
.TP
.B c
Prints a single character.
.TP
.B s
Prints a string of characters.
.TP
.B %
Prints the '%' character.
.TP
.B d, i
Prints an integer in decimal notation.
.TP
.B u
Prints an unsigned integer in decimal notation.
.TP
.B o
Prints an unsigned integer in octal notation.
.TP
.B x
Prints an unsigned integer in hexadecimal notation (lowercase).
.TP
.B X
Prints an unsigned integer in hexadecimal notation (uppercase).
.TP
.B b
Prints an unsigned integer in binary (custom specifier).
.TP
.B p
Prints a pointer address in hexadecimal format.
.TP
.B S
Prints a string, non-printable characters (0 < ASCII < 32 or >= 127) are printed as \x followed by two uppercase hex digits.
.TP
.B r
Prints a string in reverse order.
.TP
.B R
Prints a string encoded with ROT13.
.SH RETURN VALUE
The function returns the total number of characters printed.
.SH USAGE
Example:
.nf
#include "main.h"

int main(void)
{
    _printf("Hello %s!\n", "world");
    return 0;
}
.fi
.SH AUTHORIZED FUNCTIONS
write(2), malloc(3), free(3), va_start(3), va_end(3), va_copy(3), va_arg(3)
.SH NOTES
Do not use global variables. Do not exceed five functions per file. Follow Betty coding style. All your function prototypes must be declared in main.h.
.SH SEE ALSO
printf(3)

